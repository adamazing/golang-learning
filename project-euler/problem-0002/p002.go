package main

import (
	"fmt"
	"time"
)

// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four
// million, find the sum of the even-valued terms.

func fibonacci() func() int {
	a, b := 1, 2
	return func() int {
		defer func() {
			a, b = b, a+b
		}()
		return a
	}
}

func main() {
	startTime := time.Now()
	fmt.Println("Problem 2")
	f := fibonacci()
	sum := 0
	for c := f(); c < 4_000_000; {
		if c%2 == 0 {
			sum += c
		}
		c = f()
	}
	fmt.Printf("Sum: %d\n", sum)

	fmt.Printf("Took: ")
	fmt.Println(time.Now().Sub(startTime))
}
